lib()
libPaths()
install.packages("RODBC")
.libPaths()
install.packages(c("choroplethr", "devtools", "dplyr", "leaflet", "maps", "rgdal", "shiny"))
shiny::runApp('C:/Users/zhang/OneDrive/Desktop/Applied Data Science/Spring2020-Project2-group-9/app')
shiny::runApp('GitHub/Spring2020-Project2-group-9/app')
shiny::runApp('GitHub/Spring2020-Project2-group-9/app')
plot_job_number <- ggplot(job_data_year, aes(x = year, y = count)) + geom_point() +
geom_line()
plot_job_number
###Johnson Zhang begin====================================================
job_data <- read_csv("../data/na_drop.csv")
job_data$`Posting Date` <- as.Date(job_data$`Posting Date`, "%m/%d/%Y")
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year) %>%
plot_job_number <- ggplot(job_data_year, aes(x = year, y = count)) + geom_point() +
geom_line()
plot_job_number
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year) %>%
plot_job_number <- ggplot(job_data_year, aes(x = year, y = count)) + geom_point() +
geom_line()
plot_job_number
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year)
plot_job_number <- ggplot(job_data_year, aes(x = year, y = count)) + geom_point() +
geom_line()
plot_job_number
plot_job_number <- ggplot(job_data_year, aes(x = year)) + geom_col()
plot_job_number
runApp('C:/Users/zhang/OneDrive/Desktop/Applied Data Science/fall2019-proj2--sec2-grp10-master/app')
runApp('C:/Users/zhang/OneDrive/Desktop/Applied Data Science/fall2019-proj2--sec2-grp10-master/app')
View(plot_job_number)
###Johnson Zhang begin====================================================
job_data <- read_csv("../data/na_drop.csv")
job_data$`Posting Date` <- as.Date(job_data$`Posting Date`, "%m/%d/%Y")
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year)
runApp('GitHub/Spring2020-Project2-group-9/app')
###Johnson Zhang begin====================================================
job_data <- read_csv("../data/na_drop.csv")
library(leaflet)
library(geojsonio)
library(lubridate)
library(rmapshaper)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(tidyverse)
library(plotly)
library(ggpubr)
library(gridExtra)
library(cowplot)
library(shinyWidgets)
library(htmlwidgets)
library(shinyjs)
library(shiny)
library(shinydashboard)
###Johnson Zhang begin====================================================
job_data <- read_csv("../data/na_drop.csv")
setwd("~/GitHub/Spring2020-Project2-group-9/app")
###Johnson Zhang begin====================================================
job_data <- read_csv("../data/na_drop.csv")
job_data$`Posting Date` <- as.Date(job_data$`Posting Date`, "%m/%d/%Y")
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year)
View(job_data_year)
View(job_data)
plot_job_number <- ggplot(job_data, aes(x = `Career Level`, y = `Salary Range To`))
plot_job_number
job_data_full <- job_data %>% dplyr::filter(`Full/Part` == "F")
job_salary <- job_data_full %>% group_by(`Career Level`)
runApp('C:/Users/zhang/Downloads/Spring2018-Project2-Group5-master/app')
job_salary <- job_data_full %>% group_by(`Career Level`)
job_salary <- job_data_full %>% group_by(category) %>%
summarise(mean_salary = mean(`Salary Range To`))
View(job_salary)
figure_salary <- ggplot(job_salary, aes(x = job_salary, y = mean_salary) )
figure_salary <- ggplot(job_salary, aes(x = job_salary, y = mean_salary) ) +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = mean_salary)) +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = mean_salary, fill = `Career Level`)) +
geom_col()
figure_salary
job_salary <- job_data_full %>% group_by(category)
figure_salary <- ggplot(job_salary, aes(x = category, y = mean_salary, fill = `Career Level`)) +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col()
figure_salary
runApp()
runApp()
runApp()
runApp()
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`, position = "dodge")) +
geom_col()
runApp()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`), position = "dodge") +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`), position = "dodge") +
geom_bar()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`), position = "dodge") +
geom_col()
figure_salary
job_salary <- job_data_full %>% group_by(category) %>% fct_reorder(`Salary Range To`,category)
job_salary <- job_data_full %>% group_by(category) %>% fct_reorder(category,`Salary Range To`,)
job_salary <- job_data_full %>% group_by(category) %>% fct_reorder(category,`Salary Range To`)
job_salary <- job_data_full %>% group_by(category)
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`), position = "dodge") +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col() + scale_x_continuous()
figure_salary
figure_salary <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_boxplot()
figure_salary
runApp()
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col()
figure_salary_col
runApp()
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col()+options(scipen=200)
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col(options(scipen=200))
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col(aes(options(scipen=200)))
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_col()
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, fill = `Career Level`)) +
geom_point()
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, color = `Career Level`)) +
geom_point()
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, color = `Career Level`)) +
geom_point()+ geom_line()
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, color = `Career Level`)) +
geom_point()
figure_salary_col
figure_salary_col <- ggplot(job_salary, aes(x = category, y = `Salary Range To`, color = `Career Level`)) +
geom_point() + labs(y = "salary")
figure_salary_col
job_year_number <- job_data_year %>% summarise(count = n())
View(job_year_number)
figure_time <- ggplot(job_data_year, aes(x = year ))+ geom_bar()
figure_time
figure_time <- ggplot(job_data_year, aes(x = year, fill = "Full/Part" ))+ geom_bar()
figure_time
figure_time <- ggplot(job_data_year, aes(x = year, color = "Full/Part" ))+ geom_bar()
figure_time
figure_time <- ggplot(job_data_year, aes(x = year ))+ geom_bar(color = "Full/Part")
figure_time
job_year_number <- job_data_year
figure_time <- ggplot(job_data_year, aes(x = year))+ geom_bar(color = "Full/Part")
figure_time
figure_time <- ggplot(job_data_year, aes(x = year))+ geom_bar()
figure_time
job_data_year <- job_data %>% mutate(year = year(`Posting Date`)) %>% group_by(year)
figure_time <- ggplot(job_data_year, aes(x = year, fill =`Full/Part` ))+ geom_bar()
figure_time
runApp()
job_salary_factor <- job_data_year
View(job_salary_factor)
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`Career Level`,"salary" = `Salary Range To`)
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`year`,`Career Level`,"salary" = `Salary Range To`)
View(job_salary_factor)
figure_salary_col
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`year`,`Career Level`,"salary" = `Salary Range To`) %>%
mutate(salary_range = cut(salary, breaks = c(0,30000,50000,70000,100000,120000,150000,200000,300000)))
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`year`,`Career Level`,"salary" = `Salary Range To`) %>%
mutate(salary_range = cut(salary, breaks = c(0,30000,50000,70000,100000,120000,150000,200000,300000))) %>%
mutate(salary_range = fct_recode(salary_range, "below 3000" = "(0,30000]",
"30000~50000" = "(30000,50000]",
"50000~70000" = "(50000,70000]",
"70000~100000" = "(70000,100000]",
"100000~120000" = "(100000,120000]",
"120000~150000" = "(120000,150000]",
"150000~200000" = "(150000,200000]",
"200000~300000" = "(200000,300000]"))
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`year`,`Career Level`,"salary" = `Salary Range To`) %>%
mutate(salary_range = cut(salary, breaks = c(0,30000,50000,70000,100000,120000,150000,200000,300000))) %>%
mutate(salary_range = fct_recode(salary_range, "below 3000" = "(0,3e+04]",
"30000~50000" = "(3e+04,5e+04]",
"50000~70000" = "(5e+04,7e+04]",
"70000~100000" = "(7e+04,1e+05]",
"100000~120000" = "(1e+05,1.2e+05]",
"120000~150000" = "(120000,150000]",
"150000~200000" = "(1.5e+05,2e+05]",
"200000~300000" = "(2e+05,3e+05]"))
job_salary_factor <- job_data_year %>%
dplyr::select(`Job ID`,`Full/Part`,`year`,`Career Level`,"salary" = `Salary Range To`) %>%
mutate(salary_range = cut(salary, breaks = c(0,30000,50000,70000,100000,120000,150000,200000,300000))) %>%
mutate(salary_range = fct_recode(salary_range, "below 3000" = "(0,3e+04]",
"30000~50000" = "(3e+04,5e+04]",
"50000~70000" = "(5e+04,7e+04]",
"70000~100000" = "(7e+04,1e+05]",
"100000~120000" = "(1e+05,1.2e+05]",
"120000~150000" = "(1.2e+05,1.5e+05]",
"150000~200000" = "(1.5e+05,2e+05]",
"200000~300000" = "(2e+05,3e+05]"))
figure_salary_count <- ggplot(job_salary_factor)
geom_bar()
figure_salary_count <- ggplot(job_salary_factor, aes(x = year, fill = salary_range ))+
geom_bar()
figure_salary
figure_salary_count
runApp()
figure_time <- ggplot(job_data_year, aes(x = year, fill =`Full/Part` ))+ geom_bar()
figure_time
runApp()
runApp()
runApp()
figure_time <- ggplot(job_data_year, aes(x = year, fill =`Full/Part` ))+ geom_bar() +
scale_fill_brewer(palette = 'Paired')+theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)) +
theme(legend.background = element_rect(colour = 'transparent', fill = 'transparent', size = 3, linetype='dashed'))+
guides(fill=guide_legend(title="Full/Part Time"))
figure_time
library(leaflet)
library(geojsonio)
library(lubridate)
library(rmapshaper)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(tidyverse)
library(plotly)
library(ggpubr)
library(gridExtra)
library(cowplot)
library(shinyWidgets)
library(htmlwidgets)
library(shinyjs)
library(shiny)
library(shinydashboard)
figure_time <- ggplot(job_data_year, aes(x = year, fill =`Full/Part` ))+ geom_bar() +
scale_fill_brewer(palette = 'Paired')+theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)) +
theme(legend.background = element_rect(colour = 'transparent', fill = 'transparent', size = 3, linetype='dashed'))+
guides(fill=guide_legend(title="Full/Part Time"))
figure_time
runApp()
shiny::runApp()
